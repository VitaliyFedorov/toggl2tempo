<Project ToolsVersion="15.0" Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <IsPackable>false</IsPackable>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore" Version="2.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Cookies" Version="2.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="2.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="2.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.StaticFiles" Version="2.0.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.0.1" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="2.0.0" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="2.0.0" />
    <PackageReference Include="StructureMap.Microsoft.DependencyInjection" Version="1.4.0" />
  </ItemGroup>
  <ItemGroup>
    <!-- Files not to show in IDE -->
    <None Remove="yarn.lock" />
    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Content Remove="ClientApp\**" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\BLL\BLL.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Update="ClientApp\app\apiReference\Sample_SynchronizationService.ts">
      <CustomToolNamespace>ClientApi\Synchronization\SynchronizationController.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\app\apiReference\Synchronization_AuthenticationService.ts">
      <CustomToolNamespace>ClientApi\Synchronization\AuthenticationController.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\app\apiReference\Synchronization_JiraAuthModel.ts">
      <CustomToolNamespace>ClientApi\Synchronization\JiraAuthModel.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\app\apiReference\Synchronization_LoginResult.ts">
      <CustomToolNamespace>ClientApi\Synchronization\LoginResult.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\app\apiReference\Synchronization_SynchronizationService.ts">
      <CustomToolNamespace>ClientApi\Synchronization\SynchronizationController.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\app\apiReference\Synchronization_SyncPeriodModel.ts">
      <CustomToolNamespace>ClientApi\Synchronization\SyncPeriodModel.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\app\apiReference\Synchronization_SyncResultModel.ts">
      <CustomToolNamespace>ClientApi\Synchronization\SyncResultModel.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\app\apiReference\Synchronization_TogglAuthModel.ts">
      <CustomToolNamespace>ClientApi\Synchronization\TogglAuthModel.cs</CustomToolNamespace>
    </None>
  </ItemGroup>
  <Target Name="RunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>